
@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>
<div class="row">
    <div class="col-3"></div>
    <div class="col-6">
        <form id="userForm">
            <div class="mb-3">
                <label for="userName" class="form-label">姓名：</label>
                <input type="text" class="form-control" id="userName" name="Name">
                <div class="alert alert-warning" id="divWarning"></div>
            </div>
            <div class="mb-3">
                <label for="UserEmail" class="form-label">電子郵件：</label>
                <input type="email" class="form-control" id="UserEmail" name="Email">
            </div>
            <div class="mb-3">
                <label for="userAge" class="form-label">年紀：</label>
                <input type="number" class="form-control" id="userAge" name="Age">
            </div>

            <button id="btnSummit" type="submit" class="btn btn-primary">送出</button>
        </form>
        <div class="alert alert-info" id="div1"></div>
    </div>
    <div class="col-3">
    </div>
</div>

@section Scripts{
    <script>
        // (async () => {
        //     const url = '@Url.Content("~/api/register")?name=Amy&age=27&email=amy@company.com';
        //     const response = await fetch(url);
        //     const data = await response.text();
        //     console.log(data);
        // })();

        const userName = document.getElementById('userName');
        const UserEmail = document.getElementById('UserEmail');
        const userAge = document.getElementById('userAge');

        const divWarning = document.getElementById('divWarning');
        const btnSummit = document.getElementById('btnSummit');
        const div1 = document.getElementById('div1');

        btnSummit.addEventListener('click', async (event) => {
            event.preventDefault();  //停止預設行為

            const url = `@Url.Content("~/api/register")?name=${userName.value}&age=${userAge.value}&email=${UserEmail.value}`;
            const response = await fetch(url);
            const data = await response.text();
            div1.innerHTML = data;
        });


        userName.addEventListener('blur', async () => {

            //判斷欄位是否為空
            if (userName.value.trim() !== '') {
                const url = `@Url.Content("~/api/checkaccount")?name=${userName.value}`;
                const response = await fetch(url);
                const data = await response.text();

                if (data == "帳號已存在")
                    divWarning.style.color = 'red';
                else  //帳號可使用的狀況
                    divWarning.style.color = null;

                divWarning.innerText = data;

            } else {
                divWarning.innerText = "請輸入姓名";
                divWarning.style.color = null;
            }
        });
    </script>
}